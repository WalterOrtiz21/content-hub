version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: contentshub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: contentshub
      POSTGRES_USER: contentshub
      POSTGRES_PASSWORD: contentshub123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
      - ./src/main/resources/db:/db-scripts:ro
    networks:
      - contentshub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contentshub -d contentshub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: contentshub-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: contentshub
      MONGO_INITDB_ROOT_PASSWORD: contentshub123
      MONGO_INITDB_DATABASE: contentshub
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d:ro
    networks:
      - contentshub-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: contentshub-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass contentshub123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - contentshub-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin (Opcional - para administrar PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: contentshub-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@contentshub.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - contentshub-network
    depends_on:
      - postgres

  # Mongo Express (Opcional - para administrar MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: contentshub-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: contentshub
      ME_CONFIG_MONGODB_ADMINPASSWORD: contentshub123
      ME_CONFIG_MONGODB_URL: mongodb://contentshub:contentshub123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    ports:
      - "8081:8081"
    networks:
      - contentshub-network
    depends_on:
      - mongodb

  # Redis Commander (Opcional - para administrar Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: contentshub-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:contentshub123
    ports:
      - "8082:8081"
    networks:
      - contentshub-network
    depends_on:
      - redis

# Vol√∫menes para persistencia de datos
volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

# Red personalizada
networks:
  contentshub-network:
    driver: bridge
